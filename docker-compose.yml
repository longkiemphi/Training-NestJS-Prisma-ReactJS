version: '3.8'
services:
  backend:
    build:
      context: ./backend
      dockerfile: ../.docker/backend/Dockerfile
    container_name: nestjs-backend
    ports:
      - '3001:3000'
    volumes:
      - ./backend:/app
      - /app/node_modules
    working_dir: /app
    env_file:
      - path: ./backend/.env
    environment:
      - NODE_ENV=development
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: ../.docker/frontend/Dockerfile
    container_name: react-frontend
    ports:
      - '3000:3000'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - '80:80'
    volumes:
      - ./.docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend

  postgres:
    image: postgres:14.5
    container_name: postgres-db
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - path: ./backend/.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
